{
    "q01": {
        "type": "blank",
        "question": "\n<p>As discussed in class, working with <b>low-level functions</b> and\n<b>system calls</b> can be tricky because unlike most normal functions,\nthey can <b>fail</b>. For each of the following scenarios involving\n<tt>moveit</tt>, identify which <b>low-level function</b> or <b>system\ncall</b> (used in <tt>moveit</tt>) would fail:</p>\n\n<ol>\n  <li>User has reached their <b>limit of file descriptors</b>. ____</li>\n  <li>User has reach their <b>limit of processes</b>. ____</li>\n  <li>User has their <tt>EDITOR</tt> set to <tt>vscode</tt> but it does not exist on the system. ____</li>\n  <li>User does not have <b>permission</b> to write to a <b>destination path</b>. ____</li>\n</ol>\n"
    },
    "q02": {
        "type": "multiple",
        "question": "\n<p>In <tt>moveit</tt>, you should have used <tt>execlp</tt> in the\n<tt>edit_files</tt> function.  Given the following code:</p>\n\n<pre>\nexeclp(\"vscode\", \"editor\", \"tmp.file\", NULL);\n</pre>\n\n<p>Which of the following statements regarding are true (select all that\napply)?</p>\n",
        "responses": {
            "path_vscode": "The <b>path</b> to the program to load into memory is <b>vscode</b>.",
            "arg0_vscode": "The <tt>argv[0]</tt> of the process will be <b>vscode</b>.",
            "path_editor": "The <b>path</b> to the program to load into memory is <b>editor</b>.",
            "arg0_editor": "The <tt>argv[0]</tt> of the process will be <b>editor</b>."
        }
    },
    "q03": {
        "type": "single",
        "question": "\n<p>An eager student proposes changing <tt>timeit</tt> such that the\n<b>child process</b> sets an <tt>alarm</tt> before calling <tt>execvp</tt>\nso that it can <tt>kill</tt> itself if the <b>signal handler</b> is\ninvoked.  Would this work?</p>\n",
        "responses": {
            "yeah": "Yeah, totally.",
            "nope_1": "Nope, only a parent process can set an <tt>alarm</tt>.",
            "nope_2": "Nope, a process cannot <tt>kill</tt> itself.",
            "nope_3": "Nope, <tt>execvp</tt> loads new code so the <tt>alarm</tt> handler is removed."
        }
    },
    "q04": {
        "type": "single",
        "question": "\n<p>A malicious student proposes changing <tt>timeit</tt> such that the\n<b>child process</b> changes the <tt>ChildPid</tt> global variable before\ncalling <tt>execvp</tt> in order to prevent the parent from killing the\nchild process.  Would this work?</p>\n",
        "responses": {
            "yeah": "Yeah, totally.",
            "nope_1": "Nope, only a parent process can change <b>global variables</b>.",
            "nope_2": "Nope, a process cannot modify <b>global variables</b>.",
            "nope_3": "Nope, the parent and child have separate <b>address spaces</b>."
        }
    },
    "q05": {
        "type": "single",
        "question": "\n<p>A concerned student proposes changing <tt>timeit</tt> such that the\n<b>parent process</b> sends <tt>SIGSTOP</tt> to the <b>child process</b>\nwhen <tt>alarm</tt> handler is invoked.  Would this work?</p>\n",
        "responses": {
            "yeah": "Yeah, totally.",
            "nope_1": "Nope, because the <b>child process</b> can ignore <tt>SIGSTOP</tt>.",
            "nope_2": "Nope, because only the kernel can use this signal.",
            "nope_3": "Nope, because this only suspends the process and does not terminate it."
        }
    },
    "q06": {
        "type": "single",
        "question": "\n<p>A clever student proposes changing <tt>timeit</tt> such that\n<tt>parse_options</tt> simply returns a pointer to the first command line\noption in <tt>argv</tt> that is not a flag:</p>\n\n<pre>\nint argind = 1;\n\nwhile (argind < argc && strlen(argv[argind]) > 1 && argv[argind][0] == '-') {\n    char *arg = argv[argind++];\n    ...\n}\n\n...\n\nreturn &argv[argind];\n</pre>\n\n<p>Would this work?</p>\n",
        "responses": {
            "yeah": "Yeah, totally.",
            "nope_0": "Nope, you cannot use <tt>&amp;</tt> on an element in an array.",
            "nope_1": "Nope, <tt>execvp</tt> requires the vector to be on the <b>heap</b>.",
            "nope_2": "Nope, <tt>argv</tt> is not <tt>NULL</tt> terminated."
        }
    }
}
